import streamlit as st
import pandas as pd
import io
import re

# Page config
st.set_page_config(
    page_title="URL Redirect Mapping Tool",
    page_icon="ðŸ”„",
    layout="wide"
)

# App header
st.title("URL Redirect Mapping Tool")
st.markdown("""
Deze tool helpt bij het maken van URL-redirects. 
Upload een CSV-bestand met bron-URLs en doel-URLs om redirects te genereren.
""")

# Hulpfuncties
def validate_url(url):
    """Valideer of een string een geldige URL is."""
    if not url or pd.isna(url):
        return False
    
    # Eenvoudige URL-validatie
    url_pattern = re.compile(
        r'^(https?://)?'  # http:// of https://
        r'([a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]+\.[a-zA-Z]{2,}'  # domein
        r'(/.*)?$'  # pad
    )
    return bool(url_pattern.match(url))

def generate_htaccess(source_urls, target_urls):
    """Genereer .htaccess regels voor de gegeven URLs."""
    htaccess_content = "# Redirect mappings generated by URL Redirect Mapper\n"
    htaccess_content += "# Format: RedirectPermanent source_path target_url\n\n"
    htaccess_content += "RewriteEngine On\n\n"
    
    for source, target in zip(source_urls, target_urls):
        if pd.isna(source) or pd.isna(target):
            continue
            
        # Extract source path
        if "://" in source:
            source_path = source.split("://", 1)[1]
            if "/" in source_path:
                source_path = "/" + source_path.split("/", 1)[1]
            else:
                source_path = "/"
        else:
            source_path = source
        
        htaccess_content += f"RedirectPermanent {source_path} {target}\n"
    
    return htaccess_content

# Main panel for data upload
uploaded_file = st.file_uploader("Upload een CSV-bestand", type=["csv"])

if uploaded_file is not None:
    try:
        # Inlezen van CSV
        df = pd.read_csv(uploaded_file)
        st.success(f"Bestand succesvol geladen: {uploaded_file.name}")
        
        # Controleer kolomnamen
        if len(df.columns) < 2:
            st.error("Het CSV-bestand moet minimaal twee kolommen bevatten: bron-URL en doel-URL.")
        else:
            # Toon voorbeeld van gegevens
            st.write("Voorbeeld van geÃ¼ploade data:")
            st.dataframe(df.head())
            
            # Laat de gebruiker kolommen kiezen
            cols = list(df.columns)
            source_col = st.selectbox("Selecteer de kolom met bron-URLs", cols, index=0)
            target_col = st.selectbox("Selecteer de kolom met doel-URLs", cols, index=min(1, len(cols)-1))
            
            if st.button("Valideer en verwerk URLs"):
                # Valideren van URLs
                df['bron_valide'] = df[source_col].apply(validate_url)
                df['doel_valide'] = df[target_col].apply(validate_url)
                
                # Tellen van geldige en ongeldige URLs
                valide_rijen = df['bron_valide'] & df['doel_valide']
                valide_aantal = valide_rijen.sum()
                ongeldig_aantal = len(df) - valide_aantal
                
                # Toon statistieken
                col1, col2 = st.columns(2)
                col1.metric("Geldige URL-paren", valide_aantal)
                col2.metric("Ongeldige URL-paren", ongeldig_aantal)
                
                if ongeldig_aantal > 0:
                    st.warning(f"Er zijn {ongeldig_aantal} ongeldige URL-paren gevonden. Deze worden gemarkeerd in de output.")
                
                # Toon resultaat
                result_df = df[[source_col, target_col, 'bron_valide', 'doel_valide']]
                st.write("Gevalideerde resultaten:")
                st.dataframe(result_df)
                
                # Export opties
                st.subheader("Exporteren")
                
                # Excel export
                excel_buffer = io.BytesIO()
                with pd.ExcelWriter(excel_buffer, engine='openpyxl') as writer:
                    result_df.to_excel(writer, index=False, sheet_name='Redirects')
                
                st.download_button(
                    label="Download als Excel (.xlsx)",
                    data=excel_buffer.getvalue(),
                    file_name="redirect_mappings.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )
                
                # CSV export
                csv = result_df.to_csv(index=False).encode('utf-8')
                st.download_button(
                    label="Download als CSV",
                    data=csv,
                    file_name="redirect_mappings.csv",
                    mime="text/csv",
                )
                
                # .htaccess export
                htaccess_content = generate_htaccess(
                    df[valide_rijen][source_col],
                    df[valide_rijen][target_col]
                )
                
                st.download_button(
                    label="Download als .htaccess",
                    data=htaccess_content,
                    file_name="redirects.htaccess",
                    mime="text/plain",
                )
                
    except Exception as e:
        st.error(f"Fout bij het verwerken van het bestand: {str(e)}")
        st.exception(e)

# Sidebar met instructies
with st.sidebar:
    st.header("Instructies")
    st.markdown("""
    1. **Upload een CSV-bestand** met twee kolommen:
       - Kolom 1: Oude/bron URLs
       - Kolom 2: Nieuwe/doel URLs
       
    2. **Selecteer de kolommen** die de bron- en doel-URLs bevatten
    
    3. **Klik op "Valideer en verwerk URLs"** om de URLs te controleren
    
    4. **Download de resultaten** in het gewenste formaat:
       - Excel (.xlsx)
       - CSV
       - .htaccess voor Apache webservers
    """)
    
    st.header("Voorbeeld CSV formaat")
    st.code("""oude_url,nieuwe_url
https://oude-site.nl/pagina1,https://nieuwe-site.nl/pagina1
https://oude-site.nl/over-ons,https://nieuwe-site.nl/about-us
https://fr.oude-site.com/nouvelles,https://en.nieuwe-site.com/news""")

# Footer
st.markdown("---")
st.markdown("URL Redirect Mapping Tool Â© 2023") 